% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proseval.R
\name{posthoc}
\alias{posthoc}
\alias{proseval}
\alias{doseSimulation}
\title{These functions perform estimate for multiple individuals at the same time.}
\usage{
posthoc(.data, ..., .fit = "fit", .prediction = "ipred",
  .elapsed = "elapsed", .id = "ID")

proseval(.data, ..., .fit = "fit", .prediction = "ipred",
  .elapsed = "elapsed", .obs = "OBS")

doseSimulation(.data, ..., optimize, predict, .fit = "fit",
  .iterationFit = "iterationFit", .next_observed = "next_observed",
  .next_regimen = "next_regimen", .verbose = TRUE)
}
\arguments{
\item{...}{additional arguments to add to each `estimate` call. If an argument
is present both here and in .data, the argument here takes precedence.}

\item{.fit}{Either a string or NULL. If a string, the output will contain a column
with that name, storing the fit}

\item{.prediction}{Either a string or NULL. If a string, the output will contain a column
with that name, storing the predicted values for that fit}

\item{.elapsed}{Either a string or NULL. If a string, the output will contain a column
with that name, storing the required computation time (`System.time`) for that fit}

\item{.obs}{Either a string or NULL. If a string, the output will contain a column
with that name, describing how many observations were taken into account}

\item{optimize}{an optimization function for dose simulation, corresponding to function(fit, regimen, truth), and returning a list(nextTime, regimen)}

\item{predict}{a prediction function for dose simulation, corresponding to function(truth, newRegimen, nextTime)
If missing, we simply predict using the true fit.
We evaluate the nextObservations time points using the 'true' model and the new regimen.}

\item{data}{a tbl with one or multiple rows
Each column from the tbl will be mapped to the `estimate()` function.
You can generate such a tbl using \link{data} functions.}
}
\value{
a tibble with the requested columns for each fit
}
\description{
These functions perform estimate for multiple individuals at the same time.
}
\section{Proseval}{

The proseval tool calculates a prospective evaluation, and therefore creates multiple outputs per input row.
If N is the number of observations, it will calculate N+1 fits.
The first fit will be the population fit (not using any observations).
The next fit will only use one observation.
The next fit will use two observations.
And so on.
}

\section{DoseSimulation}{

This tool simulates a dose adaptation run for an individual.
We expect a .fit column in the data, that represents the best model fit for the given subject.
All other columns are passed to the posthoc function when calculating the next fit, except for
the 'observed' data (that is replaced by the simulated data)
and the 'regimen' data (that is replaced by the adapted regimen)

The DoseSimulation iterates as follows:
1) A fit is generated using the up-to-now observed concentrations
2) The optimize method is called with the following arguments:
  optimize( fit, regimen, truth )
  It is up to the optimizer to determine how to optimize the treatment regimen.
  The optimizer returns a list( nextTime=nextObservations, regimen=newRegimen, extra=tibble() )
  If nextTime is not a finite number, we stop the simulation.
3) The predict method is called with the following arguments:
  predict(truth, newRegimen, nextTime)
This predicts the next observation.
}

\examples{
data <- dataTibble(object=meropenem_model \%>\% tdmore(), observed=data.frame(ID=c(1,1,2,2), TIME=c(8,10,8,10), CONC=c(1.5,0.3,0.8,0.2)))
fit <- data \%>\%
  posthoc(regimen=data.frame(TIME=0, AMT=1000))
cluster <- multidplyr::new_cluster(2)
data \%>\% group_by(ID) \%>\% partition(cluster) \%>\% posthoc(regimen=data.frame(TIME=0, AMT=1000))
fit \%>\% tidyr::unnest(observed, ipred, .sep=".") \%>\% ggplot(aes(x=ipred.TIME)) +
geom_point(aes(y=observed.CONC)) +
geom_line(aes(y=ipred.CONC, group=ID)) +
facet_wrap(~ID)
}
