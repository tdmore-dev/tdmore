% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deSolve.R
\name{tdmore_deSolve}
\alias{tdmore_deSolve}
\title{Create a TDM-capable model from a deSolve model}
\usage{
tdmore_deSolve(parameters, add = 0, prop = 0, exp = 0, ...)
}
\arguments{
\item{parameters}{list of parameter names to be passed to the original function}

\item{add}{additive residual error, as stdev}

\item{prop}{proportional residual error, as stdev}

\item{exp}{exponential residual error, as stdev. The exponential error cannot be used in conjunction with the additive or proportional error}

\item{...}{Arguments to deSolve}
}
\value{
An object of class tdmore, which can be used to estimate posthoc Bayesian parameters
}
\description{
Create a TDM-capable model from a deSolve model
}
\examples{
# # Example for using deSolve with tdmore
# rm(list=ls(all=TRUE))
# func <- function(t, y, parms) {
#   ETA1 <- as.numeric(parms['ETA1'])
#   ETA2 <- as.numeric(parms['ETA2'])
#   CL = 23.6 * exp(ETA1*0.42)
#   Vc = 1070 * exp(ETA2*1.11);
#   ka=4.48;
#   abs = as.numeric(y[1])
#   centr = as.numeric(y[2])
#   CONC = centr / Vc * 1000
#   dabs = -ka*abs
#   dcentr = ka*abs - CL/Vc*centr
#   return(list(c(dabs,dcentr), c(CONC=CONC)))
# }
# model <- tdmore_deSolve(parameters=c("ETA1", "ETA2"),
#                         add=3.7,
#                         func=func,
#                         y=c(abs=0, centr=0),
#                         ynames=FALSE)
# regimen <- data.frame(
#   TIME=c(0, 24),
#   AMT=c(15, 15),
#   II=c(0, 24),
#   ADDL=c(0, 10)
# )
# pred <- predict(model, newdata=0:24, regimen=regimen)
# ggplot(pred, aes(x=TIME, y=CONC)) + geom_line()
#
# observed <- data.frame(TIME=c(2.4, 23), CONC=c(10, 5))
# ipredfit <- model \%>\%
#   estimate(observed, regimen)
# z <- plot(ipredfit)
# print(z)
#
# D <- findDose(ipredfit, regimen=regimen, target=data.frame(TIME=48, CONC=13.5))
}
