## This file configures the building process for pkgdown::build_site()
template:
  params:
    noindex: true # tells search engines not to index the site

home:
  strip_header: true

development:
  mode: auto  # detect based on version number
  version_label: warning
  version_tooltip: "Parameter estimation is stable, but dose recommendation API is subject to change"

navbar:
  structure:
    left:
    - home
    - intro
    - reference
    - articles
    - news
    - book
    right: github
  components:
    book:
      icon: fa-book
      text: Book
      href: book/index.html

reference:
- title: Defining your model
  desc: >
    Parameter estimation and dose recommendation needs a model. The methods below
    allow you to construct a model using `nlmixr`, `RxODE`, `deSolve` or algebraic equations.
  contents:
  - algebraic
  - tdmore
  - tdmore.algebraic
  - tdmore.default
  - tdmore.nlmixrUI
  - tdmore.nlmixrFitCore
  - tdmore.RxODE
  - tdmore_deSolve
  - errorModel
  - print.tdmore
  - summary.tdmore
  - coef.tdmore

- title: "Simulating from the model"
  desc: >
    TDMore offers a single unifying interface to simulate from a model.
  contents:
  - predict.tdmore
  - model.frame.tdmore
  - residuals.tdmore

- title: "Estimating individual parameters"
  desc: >
    Use this simple command to estimate individual parameters. This results in a `tdmorefit` object.
    You can also define your own `tdmorefit` object with fixed parameter estimates.
  contents:
  - estimate
  - tdmorefit
  - fitted.tdmorefit
  - formula.tdmorefit
  - logLik.tdmorefit
  - model.frame.tdmorefit
  - predict.tdmorefit
  - print.tdmorefit
  - summary.tdmorefit
  - coef.tdmorefit
  - vcov.tdmorefit
  - confint.tdmorefit

- title: "Investigate the log-likelihood profile"
  desc: >
    Get more information about the log-likelihood profile, how it looks like, and why a certain
    parameter set was estimated.
  contents:
  - profile.tdmorefit
  - getLikelihoodFun
  - ll
  - pop_ll
  - pred_ll

- title: "Plotting"
  desc: >
    We offer many plotting functions, all based on `ggplot2`.
    We suggest you build a `ggplot` object using `ggplot.tdmorefit()`,
    allowing you to do things like `ggplot(myFit) + stat_predict()`.
  contents:
  - stat_predict
  - plot.tdmore
  - plot.tdmorefit
  - plot.tdmoreprofile
  - autoplot.tdmore
  - autoplot.tdmorefit

- title: "Dose recommendation"
  desc: >
    Define a target value to reach, and find the dose that will bring the predicted profile to that target.
  contents:
  - computeTmax
  - findDose
  - coef.recommendation
  - plotpossibilities
  - possibilitygrid
  - searchspace
  - transformRegimen
  - updateRegimen
  - discrete.searchspace
  - evaluate
  - flatten
  - print.recommendation
  - summary.recommendation

- title: "Composite and mixture models"
  desc: >
    Combine models (e.g. full covariate and base model) depending on availability,
    or describe subpopulations using multiple models
  contents:
  - tdmore_set
  - tdmore_mixture
  - estimateMixtureModel
  - findFirstCompatibleModel
  - predict.tdmore_mixture
  - predict.tdmore_set

- title: "Model library"
  desc: >
    A library of models, to get you started.
  contents:
  - default_model
  - fluticasone_model
  - meropenem_1param_model
  - meropenem_model
  - meropenem_model_wt
  - meropenem_omega0_model
  - pheno
  - pheno_nlmixr
  - theopp
  - theopp_nlmixr
  - two_error_models
  - sunitinib_pkpd_model
  - linCmt
  - pk_
